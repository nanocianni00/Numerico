TrazadorCubicoNatural = function(x,y){
n = length(y)
j = n - 1
a = y
b = c(rep(NA,n))
c = c(rep(NA,n))
d = c(rep(NA,n))
A = c(rep(0,n))
h = c(rep(0,n))
l = c(rep(0,n))
u = c(rep(0,n))
z = c(rep(0,n))
#Paso 1
for (i in 1:j) {
h[i] = x[i + 1] - x[i]
}
#Paso 2
for (i in 2:j) {
if(i != 1){
A[i] = (3 * (a[i + 1] - a[i])/(h[i])) - (3 * (a[i] - a[i - 1]) /h[i - 1])
}
}
#Paso 3
l[1] = 1
u[1] = 0
z[1] = 0
#Paso 4
for (i in 2:j) {
l[i] = 2 * (x[i + 1] - x[i - 1]) - h[i - 1] * u[i - 1]
u[i] = h[i]/l[i]
z[i] = (A[i] - h[i - 1] * z[i - 1])/l[i]
}
#Paso 5
l[n] = 1
z[n] = 0
c[n] = 0
#Paso 6
for (i in seq(j, 1, by = -1)) {
c[i] = z[i] - u[i] * c[i + 1]
b[i] = (a[i + 1] - a[i])/h[i] - h[i] * (c[i + 1] + 2*c[i])/3
d[i] = (c[i + 1] - c[i])/(3*h[i])
}
#Paso 7
results = matrix(rep(NA, 4 * j), nrow = j, ncol = 4, byrow = False)
for (k in 1:j) {
results[k, 1] = a[k]
results[k, 2] = b[k]
results[k, 3] = c[k]
results[k, 4] = d[k]
}
#Construyo el polinomio
polinomios = rep(NA, times = j)
for (i in 1:j) {
polinomio = paste0(results[i,1])
for(k in 2:4){
polinomio = paste0(polinomio, " + ", results[i, k], " * (x - ", x[i], ")^", (k-1))
}
polinomios[i] = polinomio
}
return(polinomios)
}
print(TrazadorCubicoNatural(x = c(-0.5,-0.25,0.25,0.5), y = c(1.93750,1.33203,0.800781,0.687500))
