##8-a-

newton_raphson = function(p0, TOL,N){
  i = 1
  while(i<=N){
    x = p0
    p = p0- Polinomio_newton(p0)/dfnewton(p0)
    print(p)
    if(abs(p-p0)<TOL){
      return(p)
    }
    i = i+1
    p0 = p
  }
  return(paste("El metodo fallo luego de", N,"iteraciones"))
}

Polinomio_newton = function(x) {
x^3 - 2 * x^2 - 5
}

dfnewton = function(x) {
3 * x^2 - 4 * x
}

newton_raphson (1, 10^(-4), 100)

##d-

Polinomio_newton = function(x) {
x - 0.8 - 0.2 * sin(x)
}

dfnewton = function(x) {
1 - 0.2 * cos(x)
}

newton_raphson (1, 10^(-4), 100)

##9-a-

secante <- function(p0,p1,TOL,N){
  i <- 2
  q0 <- f_secante(p0)
  q1 <- f_secante(p1)
  while(i<=N){
    p <- p1 - q1*(p1-p0)/(q1-q0)
    if(abs(p-p1)<TOL){
      return(p)
    }
    i <- i+1
    p0 <- p1
    q0 <- q1
    p1 <- p
    q1 <- f_secante(p)
  }
  return(paste("El metodo fallo luego de",N,"iteraciones",p))
}

f_secante <- function(x) {
x^3 - 2 * x^2 - 5
}

secante(1, 4, 10^(-4), 100)

falsapos <- function(p0,p1,TOL,N){
  i <- 2
  q0 <- f_falsapos(p0)
  q1 <- f_falsapos(p1)
  while(i<=N){
    p <- p1 - q1*(p1-p0)/(q1-q0)
    if(abs(p-p1) < TOL){
      return(p)
    }
    i <- i+1
    q <- f_falsapos(p)
    if(q*q1 < 0){
      p0 <- p1
      q0 <- q1
    }
    p1 <- p
    q1 <- q
  }
  return(paste("El metodo fallo luego de",N,"iteraciones"))
}

f_falsapos <- function(x) {
x^3 - 2 * x^2 - 5                     
}

falsapos(1, 4, 10^(-4),100) 

##d-

f_secante <- function(x) {
x - 0.8 - 0.2 * sin(x)
}

secante(0, pi/2, 10^(-4), 100)

f_falsapos <- function(x) {
x - 0.8 - 0.2 * sin(x)                     
}

falsapos(0, pi/2, 10^(-4),100) 
