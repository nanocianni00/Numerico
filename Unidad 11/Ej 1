DerivadaPorDefinicion = function(x, fx){
  fprima = rep(NA, times = length(x))
  
  #Se asume que todos los valores estan separados por un h constante
  h = x[2] - x[1]
  
  #Diferencia progresiva
  for (i in 1:(length(x) - 1)){
    fprima[i] = (fx[i+1] - fx[i]) / h
  }
  
  #Diferencia regresiva
  for (i in (length(x):2)) {
    fprimaReg = (fx[i-1] - fx[i]) / (-h)
    
    if (!is.na(fprima[i])){
      if(fprimaReg != fprima[i]){
        aux = fprima[i]
        fprima[i] = glue::glue(aux, " (P)",
                                " o ",
                                fprimaReg, " (R)" )
      }  
    } else{
      fprima[i] = fprimaReg
    }
    
  }
  
  resultado = data.frame(x, fx, fprima)
  
  return(resultado)
}

DerivadaPorDefinicion(x = c(0.5, 0.6, 0.7), fx = c(0.4794, 0.5646, 0.6442))
