##1-a-
#Ni idea que es el teorema de Weierstrass

##b-

diferencias_divididas = function(x, y) {
n = length(x)
column = c("x",paste("a", 0:(n-1),sep = ""))
tabla_dd = matrix(0, n, n)
tabla_dd[,1] = y
for (i in 2:n) { #Columnas
for (j in 1:(n - i + 1)) { #Filas
tabla_dd[j, i] = (tabla_dd[j + 1, i - 1] - tabla_dd[j, i - 1])/(x[j + i - 1] - x[j])
}
}
return (tabla_dd)
}


polinomio_newton = function(x, tabla_dd) {
n = length(x)
result = as.character(tabla_dd[1, 1])
for (j in 2:n) {
coef = tabla_dd[1, j]
term = paste0("+", coef)
for (k in 1:(j - 1)) {
term = paste0(term, "*(x - ", x[k], ")")
}
result = paste0(result, term)
}
return (result)
}

valor_polinomio = function(x, tabla_dd, x_eval){
n <- length(x)
result <- tabla_dd[1, 1]
prod <- 1
  
for (j in 2:n) {
prod <- prod * (x_eval - x[j - 1])
result <- result + tabla_dd[1, j] * prod
}
return(result)
}

tabla_dd = diferencias_divididas(x = seq(2.5, 17.5, by = 1.875), y = c(0.0013, 0.0122, 0.0668, 0.2266, 0.5, 0.7734, 0.9332, 0.9878, 0.9987))
polinomio_newton(x = seq(2.5, 17.5, by = 1.875), tabla_dd)
valor_polinomio(x = seq(2.5, 17.5, by = 1.875), tabla_dd, 9)
valor_polinomio(x = seq(2.5, 17.5, by = 1.875), tabla_dd, 18)

##c-

